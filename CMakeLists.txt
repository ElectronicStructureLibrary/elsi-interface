### CMake version ###
CMAKE_MINIMUM_REQUIRED(VERSION 3.0 FATAL_ERROR)

### Project ###
PROJECT(elsi LANGUAGES NONE)
SET(elsi_URL "http://elsi-interchange.org")
SET(elsi_EMAIL "elsi-team@duke.edu")
SET(elsi_LICENSE "BSD 3")
SET(elsi_DESCRIPTION "Electronic Structure Infrastructure")
SET(elsi_DATESTAMP "180507")

### CMake modules ###
LIST(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)
INCLUDE(color_message)

### Installation paths ###
IF(PROJECT_BINARY_DIR STREQUAL PROJECT_SOURCE_DIR)
  MESSAGE(FATAL_ERROR "${MAGENTA}Build in the source directory is not allowed${COLORRESET}")
ENDIF()
SET(CMAKE_Fortran_MODULE_DIRECTORY "${PROJECT_BINARY_DIR}/include")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/lib")
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/lib")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/bin")
IF(NOT DEFINED CMAKE_INSTALL_INCLUDEDIR)
  SET(CMAKE_INSTALL_INCLUDEDIR "include" CACHE PATH "Location to install module and header files")
ENDIF()
IF(NOT DEFINED CMAKE_INSTALL_LIBDIR)
  SET(CMAKE_INSTALL_LIBDIR "lib" CACHE PATH "Location to install library files")
ENDIF()
IF(NOT DEFINED CMAKE_INSTALL_BINDIR)
  SET(CMAKE_INSTALL_BINDIR "bin" CACHE PATH "Location to install binary files")
ENDIF()
MESSAGE(STATUS "ELSI will be installed to: ${CMAKE_INSTALL_PREFIX}")

### Options ###
OPTION(ENABLE_TESTS "Build ELSI Fortran test programs" OFF)
OPTION(ENABLE_C_TESTS "Build ELSI C test programs" OFF)
OPTION(ENABLE_PEXSI "Enable PEXSI" OFF)
OPTION(ENABLE_SIPS "Enable SLEPc-SIPs" OFF)
OPTION(ENABLE_MKL "Pass -mkl=cluster to linker" OFF)
OPTION(ADD_UNDERSCORE "Suffix C functions with an underscore" OFF)
SET(ELPA2_KERNEL "" CACHE STRING "Use AVX/AVX2/AVX512/BGQ ELPA2 kernel")
SET(MPIEXEC "mpiexec" CACHE STRING "Name of MPI job launcher")
SET(MPISIZE "4" CACHE STRING "Number of MPI tasks to run tests")

### Compilers ###
IF(NOT DEFINED CMAKE_Fortran_COMPILER)
  MESSAGE(FATAL_ERROR "${MAGENTA}Fortran compiler must be set${COLORRESET}")
ELSE()
  MESSAGE(STATUS "${GREEN}Fortran compiler${COLORRESET}: ${CMAKE_Fortran_COMPILER}")
  ENABLE_LANGUAGE(Fortran)
ENDIF()
IF(NOT DEFINED CMAKE_C_COMPILER)
  MESSAGE(FATAL_ERROR "${MAGENTA}C compiler must be set${COLORRESET}")
ELSE()
  MESSAGE(STATUS "${GREEN}C compiler${COLORRESET}: ${CMAKE_C_COMPILER}")
  ENABLE_LANGUAGE(C)
ENDIF()
IF(ENABLE_PEXSI)
  IF(NOT DEFINED CMAKE_CXX_COMPILER)
    MESSAGE(FATAL_ERROR "${MAGENTA}C++ compiler must be set${COLORRESET}")
  ELSE()
    MESSAGE(STATUS "${GREEN}C++ compiler${COLORRESET}: ${CMAKE_CXX_COMPILER}")
    ENABLE_LANGUAGE(CXX)
  ENDIF()
ENDIF()
IF(ENABLE_MKL)
  IF(NOT "${CMAKE_Fortran_COMPILER_ID}" STREQUAL "Intel")
    SET(ENABLE_MKL OFF CACHE BOOL "Pass -mkl=cluster to linker" FORCE)
  ENDIF()
ENDIF()

### Compilations ###
INCLUDE_DIRECTORIES(${CMAKE_Fortran_MODULE_DIRECTORY})
INCLUDE(elpa)
IF(NOT ELPA_FOUND)
  ADD_SUBDIRECTORY(external/ELPA)
ENDIF()

INCLUDE(libomm)
IF(NOT OMM_FOUND)
  ADD_SUBDIRECTORY(external/libOMM)
ENDIF()

INCLUDE(fortjson)
IF(NOT FORTJSON_FOUND)
  ADD_SUBDIRECTORY(external/FortJSON)
ENDIF()

IF(ENABLE_PEXSI)
  MESSAGE(STATUS "Enabling PEXSI")
  INCLUDE(superlu)
  IF(NOT SUPERLU_FOUND)
    ADD_SUBDIRECTORY(external/SuperLU_DIST)
  ENDIF()

  ADD_SUBDIRECTORY(external/PEXSI)
ENDIF()

IF(ENABLE_SIPS)
  MESSAGE(STATUS "Enabling SLEPc-SIPs")
  INCLUDE(slepc)
  ADD_SUBDIRECTORY(external/SIPS)
ENDIF()

ADD_SUBDIRECTORY(src)

IF(ENABLE_TESTS OR ENABLE_C_TESTS OR BUILD_SHARED_LIBS)
  INCLUDE(mathlib)
ENDIF()

IF(ENABLE_TESTS OR ENABLE_C_TESTS)
  MESSAGE(STATUS "Enabling test programs")
  ENABLE_TESTING()
  ADD_SUBDIRECTORY(test)
ENDIF()

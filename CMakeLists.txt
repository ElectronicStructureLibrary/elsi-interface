cmake_minimum_required(VERSION 3.0)
project(elsi
  VERSION 2018.02
  LANGUAGES Fortran C)
set(elsi_URL "http://elsi-interchange.org")
set(elsi_EMAIL "elsi-team@duke.edu")
set(elsi_LICENSE "BSD-3")
set(elsi_DESCRIPTION "Electronic Structure Infrastructure")

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR}/cmake)
set(CMAKE_Fortran_MODULE_DIRECTORY ${CMAKE_BINARY_DIR}/include)
set(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib)
set(ARCHIVE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib)

set(elpa_dir ${CMAKE_SOURCE_DIR}/src/ELPA)
set(elsi_dir ${CMAKE_SOURCE_DIR}/src/ELSI)
set(omm_dir ${CMAKE_SOURCE_DIR}/src/libOMM)
set(pexsi_dir ${CMAKE_SOURCE_DIR}/src/PEXSI)
#set(ptscotch_dir ${CMAKE_SOURCE_DIR}/src/PtScotch)
set(sips_dir ${CMAKE_SOURCE_DIR}/src/SIPs)
#set(superlu_dir ${CMAKE_SOURCE_DIR}/src/SuperLU_DIST)

option(ENABLE_PEXSI "Enable PEXSI" OFF)
option(ENABLE_SIPS "Enable SIPs" OFF)
#option(ENABLE_ELPA_GPU "Use ELPA GPU" OFF)
option(ENABLE_ELPA_BGQ "Use ELPA BlueGene Q kernel" OFF)
option(ENABLE_ELPA_AVX "Use ELPA AVX kernel" OFF)
option(ENABLE_ELPA_AVX2 "Use ELPA AVX2 kernel" OFF)
option(ENABLE_ELPA_AVX512 "Use ELPA AVX512 kernel" OFF)

if(ENABLE_PEXSI)
  enable_language(CXX)
endif()

find_package(MPI REQUIRED)
if(MPI_CXX_FOUND)
  message(STATUS "Found MPI CXX compiler: ${MPI_CXX_COMPILER}")
  include_directories(${MPI_CXX_INCLUDE_PATH})
  set(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} ${MPI_CXX_COMPILE_FLAGS})
#  set(CMAKE_EXE_LINKER_FLAGS ${CMAKE_EXE_LINKER_FLAGS} ${MPI_CXX_LINK_FLAGS})
#  set(LIBS ${LIBS} ${MPI_CXX_LIBRARIES})
elseif(ENABLE_PEXSI)
  message(FATAL_ERROR "MPI CXX compiler not found")
endif()
if(MPI_C_FOUND)
  message(STATUS "Found MPI C compiler: ${MPI_C_COMPILER}")
  include_directories(${MPI_C_INCLUDE_PATH})
  set(CMAKE_CXX_FLAGS ${CMAKE_C_FLAGS} ${MPI_C_COMPILE_FLAGS})
#  set(CMAKE_EXE_LINKER_FLAGS ${CMAKE_EXE_LINKER_FLAGS} ${MPI_C_LINK_FLAGS})
#  set(LIBS ${LIBS} ${MPI_C_LIBRARIES})
elseif(ENABLE_C)
  message(FATAL_ERROR "MPI C compiler not found")
endif()
if(MPI_Fortran_FOUND)
  message(STATUS "Found MPI Fortran compiler: ${MPI_Fortran_COMPILER}")
  include_directories(${MPI_Fortran_INCLUDE_PATH})
  set(CMAKE_Fortran_FLAGS ${CMAKE_Fortran_FLAGS} ${MPI_Fortran_COMPILE_FLAGS})
#  set(CMAKE_EXE_LINKER_FLAGS ${CMAKE_EXE_LINKER_FLAGS} ${MPI_Fortran_LINK_FLAGS})
#  set(LIBS ${LIBS} ${MPI_Fortran_LIBRARIES})
else()
  message(FATAL_ERROR "MPI Fortran compiler not found")
endif()

include(elpa)
if(NOT EXTERNAL_ELPA)
  message(STATUS "Enabling internal version of ELPA")
  add_subdirectory(${elpa_dir})
endif()

include(libomm)
if(NOT EXTERNAL_OMM)
  message(STATUS "Enabling internal version of libOMM")
  add_subdirectory(${omm_dir})
endif()

if(ENABLE_PEXSI)
  include(pexsi)
  message(STATUS "Enabling PEXSI")
  add_subdirectory(${pexsi_dir})
endif()

#if(ENABLE_SIPS)
#  include(sips)
#  message(STATUS "Enabling SIPs")
#  add_subdirectory(${sips_dir})
#endif()

add_subdirectory(${elsi_dir})

#if(ENABLE_TESTS)
#  add_subdirectory(${elsi_dir}/test)
#endif()

# ====== GLOBAL ======

MPIFC  = mpiifort
MPICC  = mpicc
MPICXX = mpicxx

ARCH      = ar
ARCHFLAGS = cr
RANLIB    = ranlib

BLAS      = -L${MKLROOT}/lib/intel64 -lmkl_blas95_lp64 \
            -lmkl_intel_lp64 -lmkl_sequential -lmkl_core \
            -lpthread -lm
LAPACK    = -L${MKLROOT}/lib/intel64 -lmkl_lapack95_lp64
SCALAPACK = -L${MKLROOT}/lib/intel64 -lmkl_scalapack_lp64 \
            -lmkl_blacs_intelmpi_lp64

THIS_DIR = $(shell pwd)

# ====== ELSI ======

FFLAGS_I = -O3 -ip -lstdc++ 

HDF5 = -I/gpfs/apps/MN3/HDF5/1.8.15p1/static/include \
       -L/gpfs/apps/MN3/HDF5/1.8.15p1/static/lib \
       -lhdf5_hl_fortran -lhdf5_hl_f90cstub -lhdf5_fortran -lhdf5_f90cstub\
       -lhdf5_hl -lhdf5 -lz -lm \
       -I/gpfs/apps/MN3/SZIP/2.1/include \
       -L/gpfs/apps/MN3/SZIP/2.1/lib -lsz

# ====== ELPA ======

ELPA_DIR = $(THIS_DIR)/external/ELPA
FFLAGS_E   = -O3 -fpe0 -fpp -I$(ELPA_DIR)
CFLAGS_E   = -O3 -mavx -funsafe-loop-optimizations \
             -funsafe-math-optimizations -ftree-vect-loop-version \
             -ftree-vectorize
CXXFLAGS_E = -O3 -mavx -funsafe-loop-optimizations \
             -funsafe-math-optimizations -ftree-vect-loop-version \
             -ftree-vectorize

ARCHITECTURE = Generic
OPENMP = no

# ====== libOMM ======

libOMM_DIR = $(THIS_DIR)/external/libOMM
FFLAGS_O = -O3

MPI  = yes
LAP  = yes
SLAP = yes

# ====== PEXSI ======

PEXSI_DIR = $(THIS_DIR)/external/PEXSI
CXXFLAGS_P = -O3 -w
CFLAGS_P   = -O3 -w
FFLAGS_P   = -O3 -w

# ====== LINK ======

ELPA = -L$(ELPA_DIR)/lib -lelpa \
       -I$(ELPA_DIR)/include/elpa/modules

OMM  = -I$(libOMM_DIR)/src \
       -I$(libOMM_DIR)/src/MatrixSwitch-0.1.2/src \
       -L$(libOMM_DIR)/src -lOMM \
       -L$(libOMM_DIR)/src/MatrixSwitch-0.1.2/src -lmatrixswitch

PEXSI = -I$(PEXSI_DIR)/include \
        -I$(PEXSI_DIR)/include/pexsi \
        -I$(PEXSI_DIR)/external/include \
        -L$(PEXSI_DIR)/lib -lpexsi -lsuperlu -lparmetis -lmetis

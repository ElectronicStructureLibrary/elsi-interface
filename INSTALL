===================
HOW TO INSTALL ELSI
===================

==========================================================================
A) BASIC
==========================================================================

1) The installation of ELSI is controlled by a "make.sys" file. Examples
   can be found in "./make_sys". Copy one of them to the root directory of
   ELSI, then modify it to match the system.

   One simple ELSI "make.sys" file includes the following keywords:

      MPIFC             =  # MPI Fortran compiler
      MPICC             =  # MPI C compiler
      MPICXX            =  # MPI C++ compiler

      FFLAGS            =  # Fortran compiler flags
      CFLAGS            =  # C compiler flags
      CXXFLAGS          =  # C++ compiler flags

      CXX_LDFLAGS       =  # C++ standard library, e.g. -lstdc++
      SCALAPACK_LDFLAGS =  # ScaLAPACK libraries

      METIS_LIB         =  # METIS library
      PARMETIS_LIB      =  # ParMETIS library
      SUPERLU_LIB       =  # SuperLU_DIST library
      SUPERLU_INCLUDE   =  # SuperLU_DIST include path

2) Make sure the "make.sys" file is correctly configured.

   To build ELPA, libOMM, PEXSI, and ELSI interface, type

      "make"

3) Optional. The correctness of compilation can be checked using the
   "tomato-seed" data files. Set the following keyword in make.sys:

      TOMATO_SEED =  # Path to tomato_seed

   If not "mpirun", the name of MPI executable can be set by:

      MPI_EXEC =  # Default: mpirun

   Then, type

      "make check"

4) To create ELSI library, type

      "make install"

5) If the installation finishes without any fatal error, the library files
   will be automatically put in "./lib"; module files in "./include"; and
   executables in "./bin".

==========================================================================
B) ELPA SPECIFIC ARCHITECTURES
==========================================================================

   To enable GPU acceleration of the 1st and 5th steps of ELPA 2-stage
   solver, set

      ELPA_GPU     =  yes  # Default: no
      NVCC         =  NVIDIA CUDA C compiler
      NVCCFLAGS    =  NVIDIA CUDA C compiler flags
      CUDA_LIB     =  NVIDIA cuBLAS and CUDA runtime libraries
      CUDA_INCLUDE =  NVIDIA CUDA include path

   Available kernels (4th step of ELPA 2-stage solver) for specific
   architectures are:

      ELPA2_KERNEL =  # Default: Generic
                      # Options: SSE
                      #          AVX
                      #          AVX2
                      #          BGQ
                      #          GPU

==========================================================================
C) EXTERNAL LIBRARIES
==========================================================================

   PEXSI, one of the solvers in ELSI, requires two pre-installed external
   libraries, ParMETIS and SuperLU_DIST. If for any reason they are not
   available, one temporary solution would be disabling PEXSI (written in
   C++) by adding this keyword to make.sys:

      DISABLE_CXX =  yes  # Default: no

   To build and install ELSI, type

      "make"

   and

      "make install"

==========================================================================
D) TROUBLE SHOOTING

   For comments, feedback, ideas, ... please email elsi-team@duke.edu

   http://elsi-interchange.org

   Copyright (c) 2015-2017, ELSI consortium. All rights reserved.
==========================================================================

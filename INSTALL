=========================
   HOW TO INSTALL ELSI
=========================

===========================================================================
A) PREREQUISITES
===========================================================================

   Note:  Starting from February 2018, the installation of ELSI makes use
   of the CMake software.

   To build the ELSI interface, minimum requirements include:

     - CMake             [3.0 or newer]
     - Fortran compiler  [Fortran 2003]
     - C compiler        [C99]
     - MPI

   The following two additional components enable the PEXSI solver, thus
   are highly recommended:

     - C++ compiler  [C++11]
     - PtScotch      [6.0.4 or newer]

   To build ELSI as a shared library, or to build the ELSI test programs,
   linear algebra libraries should be provided for ELSI to link against:

     - BLAS, LAPACK, BLACS, ScaLAPACK

   By default, solver libraries redistributed within ELSI will be built.
   Optionally, they may be substituted by user's optimized versions:

     - SuperLU_DIST  [5.1.3 or newer]
     - ELPA          [2017.05.003 or newer]
     - libOMM
     - MatrixSwitch

===========================================================================
B) CMAKE BASICS
===========================================================================

   The typical workflow of using CMake to build ELSI looks like:

   $ ls

     CMakeLists.txt  external/  src/  test/  ...

   $ mkdir build
   $ cd build
   $ cmake .. -DCMAKE_INSTALL_PREFIX=/path/to/install/elsi [-Doptions ...]

     ...
     ...
     -- Generating done
     -- Build files have been written to: /current/dir

   $ make [-j np]
   $ make install

   whenever cmake is invoked, one of the command line arguments must point
   to the path where the top level CMakeLists.txt file exists, hence the
   ".." in the above example.

   A configure option may be defined by adding

   -DKeyword=Value

   to the command line when invoking CMake.

   If "Keyword" is of type boolean, its "Value" can be "ON" or "OFF".  If
   "Keyword" defines a list of libraries or include paths, the items should
   be separated with ";" (semicolon).

   For example,

   -DCMAKE_C_COMPILER=gcc
   -DENABLE_TESTS=OFF
   -DENABLE_PEXSI=ON
   -DMATH_LIB="/path/to/libscalapack.a;/path/to/lapack.a;/path/to/blas.a"
   -DELPA_INC="/path/to/include;/another/path/to/include"

   Available options are introduced in part C).

===========================================================================
C) CONFIGURATION
===========================================================================

   1) Compilers

   CMake automatically detects and sets default compilers.  The choices
   made by CMake often work, but not necessarily guarantee the optimal
   performance.  In some cases, the compilers selected by CMake may not be
   the ones desired by the user.  Therefore, it is mandatory that the user
   sets the identification of compilers explicitly:

     -DCMAKE_Fortran_COMPILER=[YOUR_MPI_FORTRAN_COMPILER]
     -DCMAKE_C_COMPILER=[YOUR_MPI_C_COMPILER]
     -DCMAKE_CXX_COMPILER=[YOUR_MPI_C++_COMPILER]

   In addition, it is highly recommended to specify the compiler flags, in
   particular the optimization flags:

     -DCMAKE_Fortran_FLAGS=[YOUR_FORTRAN_COMPILE_FLAGS]
     -DCMAKE_C_FLAGS=[YOUR_C_COMPILE_FLAGS]
     -DCMAKE_CXX_FLAGS=[YOUR_C++_COMPILE_FLAGS]

   The C++ compiler is not needed if building ELSI without PEXSI.

   2) Solvers

   ELPA, libOMM, PEXSI, and SuperLU_DIST libraries are redistributed with
   the current ELSI package.  Experienced users are encouraged to link the
   ELSI interface against external, better optimized solver libraries.
   Relevant options for this purpose are:

     -DELPA_LIB=[YOUR_ELPA_LIBRARY(-IES)]
     -DELPA_INC=[YOUR_ELPA_INCLUDE_PATH(S)]

     -DOMM_LIB=[YOUR_LIBOMM_AND_MATRIXSWITCH_LIBRARY(-IES)]
     -DOMM_INC=[YOUR_LIBOMM_AND_MATRIXSWITCH_INCLUDE_PATH(S)]

     -DENABLE_PEXSI=ON
     -DSUPERLU_LIB=[YOUR_SUPERLU_DIST_LIBRARY(-IES)]
     -DSUPERLU_INC=[YOUR_SUPERLU_DIST_INCLUDE_PATH(S)]
     -DPTSCOTCH_LIB=[YOUR_PTSCOTCH_LIBRARY(-IES)]
     -DPTSCOTCH_INC=[YOUR_PTSCOTCH_INCLUDE_PATH(S)]

   If both "XXX_LIB" and "XXX_INC" are valid, the internal version of "XXX"
   library will not be built.

   Please note that in the current version of ELSI, PEXSI is not enabled by
   default, and an external version of PEXSI is not officially supported.
   When enabling PEXSI, the user should have a working PtScotch library, as
   PtScotch is not redistributed through ELSI.

   3) Build targets

   By default, a static library (libelsi.a) will be created as the target
   of the compilation.  Since no shared library or executable is generated,
   there is no need to provide linear algebra libraries, i.e. BLAS, LAPACK,
   BLACS, and ScaLAPACK.  Building ELSI as a shared library may be enabled
   by:

     -DBUILD_SHARED_LIBS=ON

   Building ELSI test programs may be enabled by:

     -DENABLE_TESTS=ON

   In either case, the linear algebra libraries mentioned above must be
   valid through

     -DMATH_LIB=[YOUR_LINEAR_ALGEBRA_LIBRARY(-IES)]

   If the test programs are enabled, check the installation with

   $ ...
   $ make [-j np]
   $ make test

   or

   $ ...
   $ make [-j np]
   $ ctest

   Note that the tests may not run if launching MPI jobs is prohibited on
   the user's working platform.

   4) "Toolchain" files

   It is sometimes convenient to edit the settings in a "toolchain" file
   that can be read by CMake:

     -DCMAKE_TOOLCHAIN_FILE=[YOUR_TOOLCHAIN_FILE]

   Example "toolchains" are provided in the "./toolchains" directory, which
   the user may use as templates to create new ones.

===========================================================================
D) BEYOND THIS GUIDE
===========================================================================

   A complete description of the ELSI build system is available in the
   User's Guide:

     ./doc/elsi_manual.pdf

   and on the ELSI GitLab wiki pages.

===========================================================================
E) TROUBLESHOOTING
===========================================================================

   For comments, feedback, and suggestions, please contact the ELSI team
   via email:

     elsi-team@duke.edu

   Copyright (c) 2015-2018, the ELSI team.  All rights reserved.

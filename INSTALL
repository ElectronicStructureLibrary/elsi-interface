=========================
   HOW TO INSTALL ELSI
=========================

===========================================================================
A) CMAKE BASICS
===========================================================================

   Starting from Feb 17th, 2018, the installation of ELSI is managed by the
   CMake build system.

   Typical workflow:

   $ ls

     CMakeLists.txt external/  src/  test/ ...

   $ mkdir build
   $ cd build
   $ cmake .. -DCMAKE_INSTALL_PREFIX=/path/to/install/elsi [options ...]

     ...
     ...
     -- Generating done
     -- Build files have been written to: /current/dir

   $ make [-j np]
   $ make test
   $ make install

   whenever cmake is invoked, one of the command line arguments must point
   to the path where the CMakeLists.txt file exists, hence the ".." in the
   above example.

   To define an option:

   $ cmake -DKeyword=Value

   If "Keyword" is of type boolean, its "Value" can be "ON" or "OFF".  If
   "Keyword" defines a list of libraries or include directories, the items
   should be separated with ";".

   Examples:

   $ -DCMAKE_C_COMPILER=gcc
   $ -DENABLE_TESTS=OFF
   $ -DENABLE_PEXSI=ON
   $ -DMATH_LIB="/path/to/libscalapack.a;/path/to/lapack.a;/path/to/blas.a"
   $ -DELPA_INC="/path/to/include;/another/path/to/include"

   Available options are introduced in part C).

===========================================================================
B) REQUIREMENTS
===========================================================================

   To compile and install the ELSI interface and the redistributed solver
   libraries, minimum requirements include:

     - CMake 3.0 or newer
     - Fortran compiler (Fortran 2003)
     - C compiler (C99)
     - MPI

   The following two additional components enable the PEXSI solver, thus
   are highly recommended:

     - C++ compiler (C++11)
     - PtScotch 6.0.4 or newer

   To test the installed ELSI library, linear algebra libraries should be
   provided for the ELSI test programs to link against:

     - BLAS, LAPACK, (BLACS,) ScaLAPACK

   Optionally, redistributed solver libraries may be substituted by user's
   optimized versions:

     - ELPA 2017.05.003 or newer
     - libOMM and MatrixSwitch
     - SuperLU_DIST 5.1.3 or newer

===========================================================================
C) CONFIGURATION
===========================================================================

   1) Compilers

   CMake automatically searches and sets default compilers.  The choices
   made by CMake often work, but not necessarily guarantee the optimal
   performance.  Therefore, it is highly recommended to explicitly set the
   compilers and their flags, in particular the optimization flags, via the
   following options:

     - CMAKE_Fortran_COMPILER     [MPI Fortran compiler]
     - CMAKE_Fortran_FLAGS        [Fortran compilation flags]
     - CMAKE_C_COMPILER           [MPI C compiler]
     - CMAKE_C_FLAGS              [C compilation flags]
     - CMAKE_CXX_COMPILER         [MPI C++ compiler]
     - CMAKE_CXX_FLAGS            [C++ compilation flags]

   The C++ compiler is not needed if building ELSI without PEXSI.

   2) Solver libraries

   ELPA, libOMM, PEXSI, and SuperLU_DIST are redistributed with this ELSI
   package, to ease the overall installation process.  The internal version
   of ELPA comes with a few specifically written "kernels", which may be
   chosen by:

     - ENABLE_ELPA_BGQ            [Build ELPA with BlueGene Q kernel]
     - ENABLE_ELPA_AVX            [Build ELPA with AVX kernel]
     - ENABLE_ELPA_AVX2           [Build ELPA with AVX2 kernel]
     - ENABLE_ELPA_AVX512         [Build ELPA with AVX512 kernel]

   Experienced users are encouraged to link the ELSI interface against
   external, better optimized solver libraries.  Relevant options for this
   purpose are:

     - ELPA_LIB                   [External ELPA library]
     - ELPA_INC                   [External ELPA include path]

     - OMM_LIB                    [External libOMM library]
     - OMM_INC                    [External libOMM include path]

     - ENABLE_PEXSI               [Enable PEXSI support]
     - SUPERLU_LIB                [External SUPERLU_DIST library]
     - SUPERLU_INC                [External SUPERLU_DIST include path]
     - PTSCOTCH_LIB               [External PtScotch library]
     - PTSCOTCH_INC               [External PtScotch include path]

   If both "XXX_LIB" and "XXX_INC" are valid, the internal version of "XXX"
   library will not be built.  Please note that PEXSI currently needs to be
   enabled by hand, and that an external version of PEXSI is currently not
   supported.  When enabling PEXSI, the user should have a working PtScotch
   library, as PtScotch is not redistributed through ELSI.

   3) ELSI tests

   By default, a static library (libelsi.a) will be created as the target
   of the installation.  Since no executable is linked, there is no need
   for the user to provide linear algebra libraries, i.e., BLAS, LAPACK,
   BLACS, and ScaLAPACK.  Building ELSI test programs may be requested by:

     - ENABLE_TESTS               [Build ELSI test programs]

   In this case, the linear algebra libraries must be valid through

     - MATH_LIB                   [External linear algebra library]

   4) "Toolchain" files

   To avoid specifying too many options on the command line, it is often
   convenient to edit and store settings in a file.  In CMake, this is done
   by using "toolchains" that may be passed to CMake via:

     - CMAKE_TOOLCHAIN_FILE       [Pre-defined toolchain file]

   Example toolchain files are provided in the "./toolchains" directory,
   which the user may use as templates to create new ones.

===========================================================================
D) BEYOND THIS GUIDE
===========================================================================

   A complete description of the ELSI build system is available in the
   User's Guide:

     ./doc/elsi_manual.pdf

   and on the ELSI GitLab wiki pages.

===========================================================================
E) TROUBLESHOOTING
===========================================================================

   For comments, feedback, and suggestions, please contact the ELSI team
   via email:

     elsi-team@duke.edu

   Copyright (c) 2015-2018, the ELSI team.  All rights reserved.

===================
HOW TO INSTALL ELSI
===================

==========================================================================
A) BASIC

   Install solver libraries ELPA, libOMM, PEXSI using ELSI installer, then
   compile ELSI interface software.

   Snapshots of ELPA, libOMM, PEXSI in ELSI package will be used.
==========================================================================

1) The installation of ELSI is controlled by a "make.sys" file. Examples
   can be found in "./MAKE_SYS". Copy one of them to the root directory of
   ELSI, then modify it to match the system.

   One simple ELSI "make.sys" file includes the following keywords:

      THIS_DIR          =  # the path of ELSI root directory

      MPIFC             =  # MPI Fortran compiler
      MPICC             =  # MPI C compiler
      MPICXX            =  # MPI C++ compiler

      FFLAGS            =  # Fortran compiler flags
      CFLAGS            =  # C compiler flags
      CXXFLAGS          =  # C++ compiler flags

      CXX_LDFLAGS       =  # C++ linker flags, e.g. -stdc++
      SCALAPACK_FCFLAGS =  # ScaLAPACK compiler flags
      SCALAPACK_LDFLAGS =  # ScaLAPACK linker flags

      METIS_LIB         =  # Metis/Parmetis/SuperLU libraries needed by PEXSI
      PARMETIS_LIB      =
      SUPERLU_LIB       =
      SUPERLU_INCLUDE   =

      ARCHITECTURE      =  # Use ELPA kernels written for specific architectures
      OPENMP            =  # Enable OpenMP support in ELPA

2) Make sure the "make.sys" file is correctly configured.

   To build ELPA, libOMM, PEXSI, and ELSI interface, type

      "make -f Makefile.elsi"

3) Optional. The correctness of installation can be checked together with
   the "tomato-seed" data files. Set the following keyword in make.sys:

      TOMATO_SEED = # Path to tomato_seed

   The following linker flags might be necessary for creating executables:

      LDFLAGS = -Wl,--allow-multiple-definition

   Then, type

      "make -f Makefile.elsi check"

4) To create ELSI library, type

      "make -f Makefile.elsi install"

==========================================================================
B) ADVANCE I

   More settings.
==========================================================================

1) Archive tools and flags can be modified by

      ARCH      =  # Default: ar
      ARCHFLAGS =  # Default: cr
      RANLIB    =  # Default: ranlib

2) Compiler flags for each library (E for ELPA, O for libOMM, P for PEXSI,
   and I for ELSI interface) can be set separately by

      FFLAGS_I   =  # Default: $(FFLAGS)
      FFLAGS_E   =  # Default: $(FFLAGS)
      CFLAGS_E   =  # Default: $(CFLAGS)
      FFLAGS_O   =  # Default: $(FFLAGS)
      FFLAGS_P   =  # Default: $(FFLAGS)
      CFLAGS_P   =  # Default: $(CFLAGS)
      CXXFLAGS_P =  # Default: $(CXXFLAGS)

3) Linker and link flags for ELSI test programs can be set by

      LINKER  =  # Default: $(MPIFC)
      LDFLAGS =  # Default: $(FFLAGS)

==========================================================================
C) ADVANCE II

   Build ELSI interface with pre-compiled solver libraries.
==========================================================================

   E.g. ELPA is pre-installed on the system. Install libOMM and PEXSI using
   ELSI installer, then compile ELSI interface with libOMM, PEXSI, and the
   pre-installed ELPA.

   Snapshot of ELPA in ELSI package will not be built in this case.

1) Add the following keywords to "make.sys":

      USER_ELPA = yes
      ELPA_DIR  = /PATH/TO/ELPA
      ELPA_LIB  = -L/PATH/TO/ELPA/lib -lelpa -I/PATH/TO/ELPA/include

2) To build libOMM, PEXSI, and ELSI interface, type

      "make -f Makefile.elsi"

3) To create ELSI library, type

      "make -f Makefile.elsi install"

4) Pre-installed libOMM and PEXSI are supported by:

      USER_OMM = yes
      OMM_DIR  = /PATH/TO/OMM
      OMM_LIB  = -L/PATH/TO/OMM/lib -lomm -I/PATH/TO/OMM/include

   and

      USER_PEXSI = yes
      PEXSI_DIR  = /PATH/TO/PEXSI
      PEXSI_LIB  = -L/PATH/TO/PEXSI/lib -lpexsi -I//PATH/TO/PEXSI/include

==========================================================================
D) ADVANCE III

   Disable C++ code in ELSI.
==========================================================================

   For special purposes such as testing or debugging, the C++ code in ELSI
   (mainly PEXSI) can be disabled to perform a pure Fortran compilation.

1) Add the following keyword to "make.sys":

      DISABLE_C++ = yes  # Disable C++ code

2) To build ELSI, type

      "make -f Makefile.elsi"

3) To create ELSI library, type

      "make -f Makefile.elsi install"

==========================================================================
E) TROUBLE SHOOTING

   For comments, feedback, ideas, ... please email elsi-team@duke.edu

   http://www.elsi-interchange.org

   Copyright (c) 2016, ELSI consortium. All rights reserved.
==========================================================================
